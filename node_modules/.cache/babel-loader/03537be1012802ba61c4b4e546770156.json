{"ast":null,"code":"const BASE_URL = 'https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT';\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/posts`);\n    console.log(response, 'this is the promise');\n    const {\n      data\n    } = await response.json();\n    console.log(data.posts, 'this is post data');\n    return data.posts;\n  } catch (error) {\n    console.error('error fetching posts');\n  }\n};\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log(\"REGISTER RESPONSE----------->\", response);\n    const data = await response.json();\n    console.log(\"USER REGISTER DATA--------->\", data);\n    return data;\n  } catch (error) {\n    console.error('error registering user', error);\n  }\n};","map":{"version":3,"names":["BASE_URL","fetchPosts","response","fetch","console","log","data","json","posts","error","registerUser","username","password","method","headers","body","JSON","stringify","user"],"sources":["/Users/bug/Desktop/Course_Work/strangerbook/src/api/api.js"],"sourcesContent":["\nconst BASE_URL =  'https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT'\n\nexport const fetchPosts = async () => {\n    try{\n        const response = await fetch(`${BASE_URL}/posts`);\n        console.log(response, 'this is the promise');\n        const {data} = await response.json();\n        console.log(data.posts, 'this is post data')\n        return data.posts\n    } catch(error){\n        console.error('error fetching posts')\n    }\n};\n\n\nexport const registerUser = async (username, password) => {\n    try{\n        const response = await fetch(`${BASE_URL}/users/register`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: {\n                username,\n                password,\n              }\n            })\n        });\n        console.log(\"REGISTER RESPONSE----------->\", response);\n        const data = await response.json()\n        console.log(\"USER REGISTER DATA--------->\",data);\n        return data\n    } catch(error){\n        console.error('error registering user', error)\n    }\n};\n\n"],"mappings":"AACA,MAAMA,QAAQ,GAAI,+DAA+D;AAEjF,OAAO,MAAMC,UAAU,GAAG,YAAY;EAClC,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,QAAO,CAAC;IACjDI,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAE,qBAAqB,CAAC;IAC5C,MAAM;MAACI;IAAI,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IACpCH,OAAO,CAACC,GAAG,CAACC,IAAI,CAACE,KAAK,EAAE,mBAAmB,CAAC;IAC5C,OAAOF,IAAI,CAACE,KAAK;EACrB,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVL,OAAO,CAACK,KAAK,CAAC,sBAAsB,CAAC;EACzC;AACJ,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACtD,IAAG;IACC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,iBAAgB,EAAE;MACvDa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE;UACJP,QAAQ;UACRC;QACF;MACF,CAAC;IACL,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,QAAQ,CAAC;IACtD,MAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClCH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAACC,IAAI,CAAC;IAChD,OAAOA,IAAI;EACf,CAAC,CAAC,OAAMG,KAAK,EAAC;IACVL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAClD;AACJ,CAAC"},"metadata":{},"sourceType":"module"}